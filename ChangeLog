2016-02-10  Holger Schulz  <holger.schulz@cern.ch>

	* First version of prof2-runcombs plus sampling functions
	salvaged from Prof1, modified to have no scipy dependence


2015-12-16  Holger Schulz  <holger.schulz@cern.ch>

	* Only calculate polynomials structure once per instance
	-> significant speed increase

	* Add the brute force grid scan (--scan) to prof2-tune


2015-12-11  Holger Schulz  <holger.schulz@cern.ch>

	* Minimiser tweaks --- no more need for param translation,
	make strategy steerable (--strategy or -s), -q suppresses
	iminuit output now, calculation and writing of correlation
	matrix into results, dump weights into results file

2015-12-10  Holger Schulz  <holger.schulz@cern.ch>

	* Undo ui madness

	* Remove numpy dependence (except sampling.py)

	* Add prof-sens for sensitivity plotting exploting derivatives

2015-12-09  Holger Schulz  <holger.schulz@cern.ch>

	* Can specify PREFIX when calling make

2015-12-09  Andy Buckley  <andy.buckley@cern.ch>

	* Improve prof2-predict UI.

	* Add metadata printing in prof2-lsipol debug mode.

	* Add -v and -q flag shortcuts to all scripts.

2015-12-07  Holger Schulz  <holger.schulz@cern.ch>

	* Use __all__ in __init__.py 

	* Started sphinx documentation
	
	* Support only iminuit, bump version to 2.2.alpha, restructure imports

	* Sanity checks when calling parametrisation

2015-12-03  Andy Buckley  <andy.buckley@cern.ch>

	* Provide a version() function in the C++ library, and map it into
	Python. Both sources use the VERSION variable defined in the
	Makefile at build time.

	* Reduce SVD fitting threshold to 1e-20.

2015-12-03  Holger Schulz  <holger.schulz@cern.ch>

	* Make derivative calculation work also when scaling params
	
	* Let YODA write YODA

2015-12-02  Holger Schulz  <holger.schulz@cern.ch>

	* Derivative calculation

2015-11-28  Andy Buckley  <andy.buckley@cern.ch>

	* Version 2.1.2

	* Revert range shift in Ipol.cc, since it produced (small)
	numerical errors rather than improved stability. To be
	understood...

	* Add test/mkpolydata script, for generating polynomial pseudodata
	used in closure tests.

2015-11-27  Andy Buckley  <andy.buckley@cern.ch>

	* Fix bug in histo loading.

	* Adding log binning and other options to prof2-residuals.

2015-11-24  Andy Buckley  <andy.buckley@cern.ch>

	* Version 2.1.1 release.

	* Fix prof2-predict YODA writing, and improve DataHisto.toYODA.

	* Change parameter rescaling from using the [0,1] range to instead
	use [1,2], to avoid arbitrarily scaled param numbers. BREAKS IPOL
	FILE COMPATIBILITY WITH 2.1.0!!

	* Set minimizer initial step size = prange/10.

	* Add automatic determination of maximum MC errors in prof-tune,
	and use them to regularize interpolated errs which could distort
	the fit.

	* Separate internal Minuit function names (with syntax
	restrictions) from the free-form external param names.

2015-11-23  Andy Buckley  <andy.buckley@cern.ch>

	* Add pyext/professor2/chi2.py

	* Add find_maxerrs() to the Python interface, for use in error regularisation.

	* Use the param file name as a regex.

	* Use __slots__ in the internal histogram and bin types, for better memory efficiency.

	* Fix (re-fix?) use of inappropriate indices in calculation of mean and median MC uncertainties.

	* More proactive data object deletion after conversion to YODA data format.

2015-11-22  Andy Buckley  <andy.buckley@cern.ch>

	* Version 2.1.0 (significant version change due to scaling, all-orders, and ROOT support)

2015-11-18  Andy Buckley  <andy.buckley@cern.ch>

	* dataio.py: Add ROOT file reading ability.

	* Change rescaling I/O behaviour a bit, moving some hacked
	Python-only Ipol string constructors into explicit API improvements, and
	only activating rescaling if DoParamScaling is set true.

2015-11-16  Andy Buckley  <andy.buckley@cern.ch>

	* Add CPPFLAGS steering in Makefile and API tidying.

2015-11-11  Holger Schulz  <holger.schulz@cern.ch>

	* Add automatic raw param value -> unit range mapping to Ipol.

	* Add any-order long vector calculation.

2015-11-10  Andy Buckley  <andy.buckley@cern.ch>

	* Add prof2-lsipol as a handy way to make a tuning weights file
	and for general convenience.

2015-10-06  Andy Buckley  <andy.buckley@cern.ch>

	* Version 2.0.0

	* Add 'make dist' target to Makefile, and tweak/reduce Cython necessity

	* Allow calls to IpolBin and IpolHisto methods with params passed
	as unpacked *args as well as a packed iterable.

	* Add possibility to pass params as an dict-like as well as a list
	or tuple of floats -- note that the dict-like must return
	*ordered* values consistent with the Ipol training. Also ensure
	the float type.

	* Add conversion of C++ exceptions to Python exceptions.

	* Add professor2.utils module, providing an opportunistic use of
	OrderedDict for params so the params order required by Ipol is the
	same as the order in which they are specified in the (first run's)
	params.dat file.

	* Change Python-mapped Ipol methods with no args to be properties.

	* Add nice __repr__ methods for Histo and Bin objects.

	* Specialise Histo as IpolHisto and DataHisto, and provide
	toData{Histo,Bin} on IpolHisto and IpolBin respectively.

	* Remove ProfMaster.

2015-10-04  Andy Buckley  <andy.buckley@cern.ch>

	* Add protection of svd.setThreshold call to ensure it is
	supported/needed, via Eigen version number macros.

	* Add vmin and vmax args to Ipol and IpolBin in Python.

2015-10-02  Andy Buckley  <andy.buckley@cern.ch>

	* Put histo file reading in a try..except block so read failures
	on non-histo files in the run dirs are not fatal.

	* Add protection in the histo loader, so we don't trip up on
	Rivet's new cross-section and counter objects.

2015-09-30  Andy Buckley  <andy.buckley@cern.ch>

	* src/Ipol.h: Use Eigen/SVD include path rather than non-standard eigen3/Eigen/SVD.

2015-09-14  Holger Schulz  <holger.schulz@durham.ac.uk>

	* Use Eigen's svd.setThreshold(1e-20) to prevent the errors we saw with Eigen
	3.2.2 and later when looking at 5th order polynomials in 3 dimensinos
	with 900+ anchors

	* Some clean up

2015-09-11  Andy Buckley  <andy.buckley@cern.ch>

	* Adding prof2-residuals script for ipol faithfulness testing.

	* Rename scripts from prof-* to prof2-* to allow parallel installations of Prof1 and Prof2.

	* Move some non-core scripts from bin to contrib.

	* Make root-config dependency optional

	* Lots of reworking to make prof-tune work again, and to use weight file parsing.

2015-09-10  Andy Buckley  <andy.buckley@cern.ch>

	* Use weight file path parsing in prof-ipol.

	* Add prof.weights submodule, with a copy of PointMatcher and a
	new read_pointmatchers function for handling weight files.

	* Provide __version__attribute in the Python module.

	* User script CLI consistency, simplification, general smoothing...

2015-08-30  Andy Buckley  <andy.buckley@cern.ch>

	* Add recursive scangrid generator function, and other tweaks.

2015-08-18  Andy Buckley  <andy.buckley@cern.ch>

	* Tweaks to ipol file parsing functions.

	* Fix a bug in IpolBin's use of interpolated errors.

	* Convert mean and median error parameterisation to use new 0th order ipols.

2015-08-15  Holger Schulz  <holger.schulz@durham.ac.uk>

	* A first version of catching singular matrices in the SVD

	* Ipol has 1 additional argument, "threshold", that determines what
	singular values are considered 0, fully propagated to pyext

	* Going 2 Pro 2 Fessional

	* Some startup checks of prof- scripts

	* remove bin/prof-sampling, rename prof-prediction -> prof-predict

2015-08-13  Holger Schulz  <holger.schulz@durham.ac.uk>

	* Reverted unintended commit of hack.

	* Added very basic prof-config script to bin

	* Update PATH when sourcing setup.sh

2015-08-12  Holger Schulz  <holger.schulz@durham.ac.uk>

	* Added prof-prediction which reads in a ifile and a point in
	parameter space (either a text file, a comma separated list or just
	the args) and writes out an ipolhisto. Tested to work.

2015-08-03  Holger Schulz  <holger.schulz@durham.ac.uk>

	* Added 0-order polynomials, i.e. constant values.
	Currently, the coefficent is simply the value of
	the first anochorpoint.

2015-07-15  Holger Schulz  <holger.schulz@durham.ac.uk>

	* Some pull plotting functionality

2015-07-08  Holger Schulz  <holger.schulz@durham.ac.uk>

	* Calculate and print G.o.f.

	* Write some meta info to results

	* Read limits, fixed params from single textfile --limits

	* Output files steered by --output

	* Remove now obsolete bin/prof-interpolate


2015-07-08  Holger Schulz  <holger.schulz@durham.ac.uk>

	* First working version of prof-tune (pyminuit, simpleGOF)

	* Multiprocessing to speed up prof-ipol (--multi)

	* prof-ipol-tabulated to write out interpolation of tabulated data

	* Minor bugfixes


2015-06-16  Andy Buckley  <andy.buckley@cern.ch>

	* Adding mean and median strategies for assigning constant ipol bin errors.

2015-06-03  Andy Buckley  <andy.buckley@cern.ch>

	* Adding a Bin base class in the Python side, and a coherent handling of multiple (interpolated) bin errors.

	* Various tweaks and minor fixes.

2015-05-10  Andy Buckley  <andy.buckley@cern.ch>

	* Add 'Minuit' class importing to the __init__.py file.

2015-05-05  Andy Buckley  <andy.buckley@cern.ch>

	* Rewrite C++ ipolstring parsing using STL string functions rather than Boost: shorter! Boost dependency GONE :-)

	* Replace boost::tuple with std::pair and clean up ParamPoints interface a bit.

	* Add a --veto option to prof-sample, for a user-specified vetoing function.

	* Move Sampler from prof-sample into professor2/__init__.py

2015-05-04  Andy Buckley  <andy.buckley@cern.ch>

	* Adding a first version of prof-tune with ipol reading from file.

	* Adding options for (average) error interpolation and ipol persistency to prof-ipol and module functions.

2015-05-03  Andy Buckley  <andy.buckley@cern.ch>

	* Add bin/prof-ipol simple script using the functions below -- to be merged with prof-interpolate.

	* professor2/__init__.py: Add Histo, DataBin, IpolBin and basic data handling functions.

	* Remove unnecessary dlopen fiddling from professor2/__init__.py

2015-04-23  Andy Buckley  <andy.buckley@cern.ch>

	* Remove bound ParamPoints pointer from Ipol, and ditch lazy coeff evaluation in favour of simplicity and construct-time coeff calculating.

	* Move long vector and coeff building into unbound functions rather than Ipol methods.

	* Start of ChangeLog. Library has already iterated quite a bit.

	* FILL IN EARLY HISTORY FROM HG LOG
