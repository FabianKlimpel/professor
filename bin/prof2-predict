#! /usr/bin/env python

"""\
%prog datadir

Write out yoda file at parampoint P

TODO:
    * stuff
"""

import optparse
op = optparse.OptionParser(usage=__doc__)
op.add_option("--ifile", dest="IFILE", default="ipol.dat", help="File from which to read the bin interpolations (default: %default)")
op.add_option("--output", dest="OUTPUT", default="tuned", help="Prefix for outputs (default: %default)")
op.add_option("--debug", dest="DEBUG", action="store_true", default=False, help="Turn on some debug messages")
op.add_option("--quiet", dest="QUIET", action="store_true", default=False, help="Turn off messages")
# TODO: Add weight file parsing to decide which histos (and bin subsets) to interpolate
opts, args = op.parse_args()

## Read persisted interpolations to re-create the ipol Histos
import professor2 as prof
if not opts.QUIET:
    print prof.logo

import os, sys
if not os.path.exists(opts.IFILE):
    print "Error: specified interpolation file %s not found, exiting." % opts.IFILE
    sys.exit(1)

## Read in meta data and ipol histos
META, IHISTOS = prof.read_ipolhistos(opts.IFILE)

## This is the Parameter point bit
if len(args) == 1:
    try:
        PARAMS = [float(x) for x in args[0].split(",")]
    except:
        if os.path.exists(args[0]):
            with open(args[0]) as f:
                PARAMS = [float(l.strip().split()[-1]) for l in f if not l.startswith("#")]
else:
    PARAMS = [float(a) for a in args]

## Write out ipolhistos TODO catch import error?
import yoda
scatters=[IHISTOS[k].toDataHisto(PARAMS).toScatter2D() for k in sorted(IHISTOS.keys())]
yoda.writeYODA(scatters, "%s_prediction.yoda" % opts.OUTPUT)
