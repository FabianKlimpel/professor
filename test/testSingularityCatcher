#! /usr/bin/env python

import numpy as np

def f(x,y):
    return 3*x**3 + 4*y**3 - 10*x*y**2 - 2*x**2 + 0.5*y**2 + 2*x + 9*y - 2*x*y + 1

A = np.linspace(0, 20, 20)
M_X, M_Y = np.meshgrid(A, A)
M_Z = np.empty(M_X.shape)

P, Y = [], []
for i in xrange(M_X.shape[0]):
    for j in xrange(M_X.shape[1]):
        P.append([i,i]) # Correlated parameters --- should lead to singular matrix
        Y.append(f(i,j))

import professor2 as prof

threshold=1e-17
for i in xrange(17):
    threshold*=10
    print "Test threshold %e"%threshold
    ipol = prof.Ipol(P, Y, 1, threshold)



